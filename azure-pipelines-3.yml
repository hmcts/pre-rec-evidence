name: Darren PRE Exporter
trigger: none
pr: none
parameters:
  - name: serviceConnectionExport
    displayName: Export from Service Connection
    type: string
    default: 'PowerPlatformTest'
    values:
      - 'PowerPlatformTest'
      - 'PowerPlatform'
      - 'POWERAPPS-PRE-SDS-SBOX'
      - 'POWERAPPS-PRE-SDS-DEV'
      - 'POWERAPPS-PRE-SDS-STG'
      - 'POWERAPPS-PRE-SDS-PROD'
  - name: exportToBranch
    displayName: Export To Branch
    type: string
    default: 'refactoring-tests'
  - name: serviceConnectionImport
    displayName: Import to Service Connection
    type: string
    default: 'PowerPlatformDev'
    values:
      - 'PowerPlatformDev'

variables:
  solutionName: dts_pre_recorded_evidence

pool:
  vmImage: windows-latest

steps:

  - checkout: self
    persistCredentials: true
    clean: true
  - task: NuGetCommand@2
    displayName: Install PAC
    inputs:
      command: 'custom'
      arguments: 'install Microsoft.PowerApps.CLI -OutputDirectory pac'
  - task: PowerShell@2
    displayName: Set Env:Path for pac
    inputs:
      targetType: 'inline'
      script: |
        $pacNugetFolder = Get-ChildItem "pac" | Where-Object {$_.Name -match "Microsoft.PowerApps.CLI."}
        $pacPath = $pacNugetFolder.FullName + "\tools"
        echo "##vso[task.setvariable variable=pacPath]$pacPath"
        $pacPath
        $Env:Path += ";$pacPath"
        #[Environment]::SetEnvironmentVariable("PATH", $Env:PATH + ";$pacpath", [EnvironmentVariableTarget]::Machine)
        $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User") 
  - task: CmdLine@2
    inputs:
      script: |
        dir D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools
        #D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools\pac
        pac
        set
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools'
      Contents: 'pac.*'
      TargetFolder: 'C:\Windows\system32'
  - task: PowerPlatformToolInstaller@0
    inputs:
      DefaultVersion: true

  #- task: PowerPlatformDownloadPaportal@0
  #  inputs:
  #    authenticationType: 'PowerPlatformSPN'
  #    PowerPlatformSPN: 'PowerPlatformTest'
  #    Environment: 'https://orgd6d9527b.crm11.dynamics.com'
  #    DownloadPath: 'D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools'
  #    WebsiteId: '682912fe-27db-452e-8aac-e938e6b99f57'
  
  - task: PowerShell@2
    displayName: Connect to PowerPortal Test and Download Portal
    inputs:
      targetType: 'inline'
      script: |
        # refresh path to make pac available
        #$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
        D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools\pac auth create --name ExportTest `
          --url https://orgd6d9527b.crm11.dynamics.com `
          --tenant 531ff96d-0ae9-462a-8d2d-bec7c0b42082 `
          --applicationId 07587e3c-603e-401f-98d1-ff26206e93f8 `
          --clientSecret bWg8Q~E2j2iMGWPYJ8LTkvQZAkXKxYev8f7VCaVi
        D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools\pac auth list
        D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools\pac paportal list
        D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools\pac paportal download `
          --path D:\a\1\s\export\ `
          --webSiteId eb7a44dc-0f64-ec11-8f8f-000d3ad55d7e `
          --overwrite
        dir D:\a\1\s\export
        
  - task: PowerPlatformExportSolution@0
    inputs:
      authenticationType: 'PowerPlatformSPN'
      PowerPlatformSPN: ${{ parameters.serviceConnectionExport }}
      SolutionName: $(solutionName)
      SolutionOutputFile: 'dts_pre_recorded_evidence.zip'
      AsyncOperation: false
      Managed: false
      MaxAsyncWaitTime: 120
      ExportAutoNumberingSettings: true
      ExportCalendarSettings: true
      ExportCustomizationSettings: true
      ExportEmailTrackingSettings: true
      ExportGeneralSettings: true
      ExportIsvConfig: true
      ExportMarketingSettings: true
      ExportOutlookSynchronizationSettings: true
      ExportRelationshipRoles: true
  
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'dts_pre_recorded_evidence.zip'
      artifact: 'Solution Archive'
      publishLocation: 'pipeline'
  - task: PowerPlatformUnpackSolution@0
    inputs:
      SolutionInputFile: 'dts_pre_recorded_evidence.zip'
      SolutionTargetFolder: 'src'
  - task: CmdLine@2
    inputs:
      script: |
        echo Commit Power Platform Solution
        git config user.email "prebuildpipeline@hmcts.net"
        git config user.name "PRE Build Pipeline"
        git pull origin master
        git checkout -b ${{ parameters.exportToBranch }}
        git add --all
        git commit -m "Automatic solution commit"
        git -c http.extraheader="AUTHORIZATION: bearer $(system.githubPat)" push origin ${{ parameters.exportToBranch }}
  #removed to speedup testing
  - task: PowerPlatformImportSolution@0
    inputs:
      authenticationType: 'PowerPlatformSPN'
      PowerPlatformSPN: ${{ parameters.serviceConnectionImport }}
      SolutionInputFile: 'dts_pre_recorded_evidence.zip'
      AsyncOperation: true
      MaxAsyncWaitTime: '60'
  - task: PowerShell@2
    displayName: Connect to PowerPortal DEV and Upload Portal
    inputs:
      targetType: 'inline'
      script: |
        D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools\pac auth create --name ImportDEV `
          --url https://org5a5e7c61.crm11.dynamics.com/ `
          --tenant 531ff96d-0ae9-462a-8d2d-bec7c0b42082 `
          --applicationId 07587e3c-603e-401f-98d1-ff26206e93f8 `
          --clientSecret bWg8Q~E2j2iMGWPYJ8LTkvQZAkXKxYev8f7VCaVi
        D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools\pac auth list
        D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools\pac paportal list
        #D:\a\1\s\pac\Microsoft.PowerApps.CLI.1.16.6\tools\pac paportal upload `
         # --path D:\a\1\s\export\pre-test\* `
         # --webSiteId eb7a44dc-0f64-ec11-8f8f-000d3ad55d7e
        dir D:\a\1\s\export
