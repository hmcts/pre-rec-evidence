name: Darren PRE Exporter
trigger: none
pr: none
parameters:
  - name: serviceConnection
    displayName: Import from Service Connection
    type: string
    default: 'PowerPlatform'
    values:
      - 'PowerPlatform'
      - 'POWERAPPS-PRE-SDS-SBOX'
      - 'POWERAPPS-PRE-SDS-DEV'
      - 'POWERAPPS-PRE-SDS-STG'
      - 'POWERAPPS-PRE-SDS-PROD'
  - name: exportToBranch
    displayName: Export To Branch
    type: string
    default: 'ADO-Powerplatform'

variables:
  solutionName: dts_pre_recorded_evidence

pool:
  vmImage: windows-latest

steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: '6.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
        performMultiLevelLookup: true
    
    - task: NodeTool@0
      inputs:
        versionSpec: 18
    - task: replacetokens@5
      inputs:
        rootDirectory: 'test/e2e'
        targetFiles: 'secrets.json'
        encoding: 'auto'
        tokenPattern: 'default'
        writeBOM: true
        verbosity: 'detailed'
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        enableRecursion: false
        useLegacyPattern: false
        enableTelemetry: true

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'test\e2e'

    - task: CmdLine@2
      inputs:
        script: |
          dotnet add package Microsoft.Extensions.Configuration --version 6.0.0
          dotnet add package Microsoft.Extensions.Configuration.Json --version 6.0.0
          dotnet add package Microsoft.Playwright
          dotnet tool update --global PowerShell
          dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
        workingDirectory: 'test\e2e'
    
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        workingDirectory: 'test\e2e'
    
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'test\e2e'
        Contents: 'secrets.json'
        TargetFolder: 'D:\a\1\s\test\e2e\bin\Debug\net6.0'
        OverWrite: true
    - task: DownloadSecureFile@1
      name: authfile
      displayName: 'Download auth.json'
      inputs:
        secureFile: 'auth.json'
    - task: CmdLine@2
      inputs:
        script: 'copy $(authfile.secureFilePath) D:\a\1\s\test\e2e\bin\Debug\net6.0'
    - task: CmdLine@2
      inputs:
        script: 'copy $(authfile.secureFilePath) D:\a\1\s\test\e2e'
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        arguments: '--filter AdminManageRecordings'
        testRunTitle: 'Pipeline Tests'
        projects: 'D:\a\1\s\test\e2e\pre.csproj'

    - task: CmdLine@2
      inputs:
        script: 'more D:\a\_temp\*.trx'

    - task: CmdLine@2
      inputs:
        script: 'livingdoc test-assembly bin/Debug/net6.0/pre.dll -t bin/Debug/net6.0/TestExecution.json'